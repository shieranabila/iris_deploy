# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1g8BOhIxi1vHpfCKDTOyU10fayYzciEVl
"""



import streamlit as st
import pandas as pd
import numpy as np
import joblib
from sklearn.datasets import load_iris
import matplotlib.pyplot as plt
import seaborn as sns

# Load model
model = joblib.load("naive_bayes_model.pkl")
iris = load_iris()
iris_df = pd.DataFrame(iris.data, columns=iris.feature_names)
iris_df['species'] = pd.Categorical.from_codes(iris.target, iris.target_names)

# Sidebar navigation
st.sidebar.title("Navigation")
page = st.sidebar.radio("Go to", ["Data Description", "Prediction", "Visualization"])

# Page 1: Data Description
if page == "Data Description":
    st.title("üìä Iris Dataset Description")
    st.write("This is the classic Iris flower dataset.")
    st.dataframe(iris_df.head())
    st.write("**Dataset Summary:**")
    st.write(iris_df.describe())
    st.write("**Target Classes:**")
    st.write(iris.target_names)

# Page 2: Prediction
elif page == "Prediction":
    st.title("üîç Predict Iris Species")

    st.write("Input flower features below:")

    sepal_length = st.number_input("Sepal length (cm)", 0.0, 10.0, 5.1)
    sepal_width = st.number_input("Sepal width (cm)", 0.0, 10.0, 3.5)
    petal_length = st.number_input("Petal length (cm)", 0.0, 10.0, 1.4)
    petal_width = st.number_input("Petal width (cm)", 0.0, 10.0, 0.2)

    if st.button("Predict"):
        features = np.array([[sepal_length, sepal_width, petal_length, petal_width]])
        prediction = model.predict(features)[0]
        st.success(f"The predicted species is: **{iris.target_names[prediction].capitalize()}**")

# Page 3: Visualization
else:
    st.title("üìà Data Visualization")
    st.write("Here are some visualizations of the Iris dataset.")

    plot_type = st.selectbox("Choose plot type", ["Pairplot", "Correlation Heatmap"])

    if plot_type == "Pairplot":
        fig = sns.pairplot(iris_df, hue="species")
        st.pyplot(fig)
    elif plot_type == "Correlation Heatmap":
        fig, ax = plt.subplots()
        sns.heatmap(iris_df.iloc[:, :-1].corr(), annot=True, cmap="coolwarm", ax=ax)
        st.pyplot(fig)